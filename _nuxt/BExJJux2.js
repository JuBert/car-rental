import{d as y,r as p,I as C,x as a,y as n,J as w,K as g,L as S,z as b,M as k,N as U,A as h,O as $,n as I,B as T,P as L,q as N}from"./DN11Md4-.js";const A={class:"relative w-64"},B=["placeholder"],M={key:0,class:"absolute z-10 bg-white border border-gray-300 w-full mt-1 rounded shadow"},V=["onClick"],z={key:1,class:"absolute right-2 top-2 text-gray-400 text-xs"},D={key:2,class:"text-red-500 mt-2 text-sm"},E=y({__name:"AutoCompleteInput",props:{apiUrl:{},errorMessage:{},placeholder:{}},emits:["select"],setup(_,{emit:m}){const r=_,l=p(""),o=p([]),i=p(!1),e=p(""),u=m;let c=null;const v=async t=>{try{const d=`${r.apiUrl}?search=${encodeURIComponent(t)}`,s=await $fetch(d);o.value=s.filter(f=>f.name.toLowerCase().includes(t.toLowerCase()))}catch{e.value=r.errorMessage||"Error fetching",o.value=[]}};C(l,t=>{if(c&&clearTimeout(c),e.value="",!t){o.value=[],e.value="";return}c=setTimeout(async()=>{i.value=!0,v(t),i.value=!1},300)});const x=t=>{l.value=t.name,o.value=[],e.value="",u("select",t)};return(t,d)=>(n(),a("div",A,[w(b("input",{"onUpdate:modelValue":d[0]||(d[0]=s=>l.value=s),type:"text",placeholder:t.placeholder||"Search...",class:"border border-gray-300 rounded px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-400 transition"},null,8,B),[[S,l.value]]),o.value.length?(n(),a("ul",M,[(n(!0),a(k,null,U(o.value,s=>(n(),a("li",{key:s.id,onClick:f=>x(s),class:"px-4 py-2 hover:bg-blue-100 cursor-pointer"},h(s.name),9,V))),128))])):g("",!0),i.value?(n(),a("div",z," Loading... ")):g("",!0),e.value?(n(),a("div",D,h(e.value),1)):g("",!0)]))}}),O=Object.assign(E,{__name:"AutoCompleteInput"}),R=y({__name:"index",setup(_){const m=I(),r=$(),l=p(`${m.public.baseUrl}/stations`),o=e=>{r.value=e,i()},i=()=>{if(r.value){const e=r.value?.id;N({path:`/station/${e}`})}};return(e,u)=>{const c=O;return n(),a("div",null,[u[1]||(u[1]=b("p",null,"stations",-1)),T(c,{"api-url":L(l),placeholder:"Search for a station","error-message":"No stations found",onSelect:u[0]||(u[0]=v=>o(v))},null,8,["api-url"])])}}});export{R as default};
